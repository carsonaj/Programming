import requests
import numpy as np
import pandas as pd

class Connection:

    def __init__(self, api_key):
        self._api_key = api_key

    @property
    def api_key(self):
        return self._api_key

    def get_id(self, ticker):
        id_url = 'https://simfin.com/api/v1/info/find-id/ticker/' + ticker + '?api-key=' + self.api_key
        parameters = {'api-key': self.api_key}
        id_response = requests.get(id_url, params=parameters)
        assert id_response.status_code == 200
        id_list = id_response.json()
        
        if len(id_list) == 0:
            return None
        else: 
            id_dict = id_response.json()[0]
            assert 'simId' in id_dict.keys()
            id = id_dict['simId']
            return id
        
    def get_series(self, id, start, end):
        """start/stop in format YYYY-MM-DD"""
        price_url = 'https://simfin.com/api/v1/companies/id/' + str(id) + '/shares/prices'
        parameters = {'api-key': self.api_key, 'start': start, 'end': end}
        price_response = requests.get(price_url, parameters)
        assert price_response.status_code == 200
        price_json = price_response.json()
        assert 'priceData' in price_json.keys()
        price_list = price_json['priceData']
        length = len(price_list)
        prices = []
        dates = []
        
        for i in range(length-1,-1,-1):
            prices.append(price_list[i]['closeAdj'])
            dates.append(price_list[i]['date'])
            
        dates = pd.DatetimeIndex(dates)
        prices = np.array(prices, dtype='float64')
        series = pd.Series(data=prices, index=dates)
        series.dropna(inplace=True)
        
        return series
